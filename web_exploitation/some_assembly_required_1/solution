Access to : http://mercury.picoctf.net:26318/index.html

Check ressources, you will find a Webassembly javascript

After checking the file a while (assembly.js), you will found that it executes a fetch request from a remote ressources at ./JIFxzHyW8W

After requesting that ressource, a file is downloaded

executing `file` on the file, we will get :

└─$ file JIFxzHyW8W   
JIFxzHyW8W: WebAssembly (wasm) binary module version 0x1 (MVP)

to desasymble it, use WABT: The WebAssembly Binary Toolkit

check : https://github.com/WebAssembly/wabt

    - clone frepo (follow repo README.md)
    - make (assemble libs all together) using cmake or make
    - start execution in build/ folder

┌──(rivench㉿kali)-[~/…/picoCTF/some_assembly_required_1/wabt/build]
└─$ ls
callback.wasm          finalize.wasm  include            libwasm.so    serialize.wasm   trap.wasm                  wasm2c_header_bottom.cc        wasm-c-api-callback  wasm-c-api-memory     wasm-c-api-table    wasm-objdump    wat2wasm
CMakeCache.txt         global.wasm    libgtest.a         Makefile      spectest-interp  wabt-config.cmake          wasm2c_header_top.cc           wasm-c-api-finalize  wasm-c-api-multi      wasm-c-api-threads  wasm-opcodecnt  wat-desugar
CMakeFiles             hello.wasm     libgtest_main.a    memory.wasm   start.wasm       wabt-config-version.cmake  wasm2c_source_declarations.cc  wasm-c-api-global    wasm-c-api-reflect    wasm-c-api-trap     wasm-strip
cmake_install.cmake    hexfloat_test  libwabt.a          multi.wasm    table.wasm       wabt-unittests             wasm2c_source_includes.cc      wasm-c-api-hello     wasm-c-api-serialize  wasm-decompile      wasm-validate
compile_commands.json  hostref.wasm   libwasm-rt-impl.a  reflect.wasm  threads.wasm     wasm2c                     wasm2wat                       wasm-c-api-hostref   wasm-c-api-start      wasm-interp         wast2json


you can use :
    - wasm-decompile
    - wasm2c

we will use wasm-decompile :

┌──(rivench㉿kali)-[~/…/picoCTF/some_assembly_required_1/wabt/build]
└─$ ./wasm-decompile ../../JIFxzHyW8W 

┌──(rivench㉿kali)-[~/…/picoCTF/some_assembly_required_1/wabt/build]
└─$ ./wasm-decompile ../../JIFxzHyW8W > ../../desassembeled.txt

you will find the flag in the desassembeled.txt
